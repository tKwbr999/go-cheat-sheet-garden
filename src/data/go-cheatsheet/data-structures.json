{
  "title": "Data structures",
  "codeExamples": [
    {
      "title": "Arrays",
      "code": "// Array declaration\nvar a [5]int // [0 0 0 0 0]\n\n// Array initialization\nb := [3]int{1, 2, 3}\n\n// Array with implicit size\nc := [...]int{4, 5, 6, 7} // [4]int\n\n// Accessing elements\nfirst := a[0]\na[0] = 10"
    },
    {
      "title": "Slices",
      "code": "// Slice declaration\nvar s []int // nil slice\n\n// Make a slice\ns = make([]int, 5)     // len=5, cap=5\ns = make([]int, 3, 10) // len=3, cap=10\n\n// Slice literal\ns = []int{1, 2, 3} // len=3, cap=3\n\n// Append to slice\ns = append(s, 4, 5) // [1 2 3 4 5]\n\n// Slice of a slice\nsub := s[1:3] // [2 3]"
    },
    {
      "title": "Maps",
      "code": "// Map declaration\nvar m map[string]int // nil map\n\n// Make a map\nm = make(map[string]int)\n\n// Map literal\nm = map[string]int{\n  \"one\": 1,\n  \"two\": 2,\n}\n\n// Map operations\nm[\"three\"] = 3   // Add/update\nvalue := m[\"one\"] // Get: 1\ndelete(m, \"two\")  // Delete\nvalue, exists := m[\"four\"] // Check: 0, false"
    }
  ]
}